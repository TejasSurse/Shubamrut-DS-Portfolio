<% layout('/layouts/boilerplate') -%>
<% title="Projects | Shubamrut Designing Studio" %>

<main class="pt-10 lg:pt-20 p-4 sm:p-8 bg-gray-100 min-h-screen">
    <div class="max-w-screen-xl mx-auto">
        <h1 class="text-4xl font-bold text-gray-900 mb-8 text-center animate-fade-in">Our Projects</h1>

        <!-- Filter Buttons -->
        <div class="flex justify-center gap-4 mb-12">
            <button id="commercialFilter" class="filter-btn bg-blue-400 text-white px-6 py-3 rounded-lg hover:bg-blue-500 transition transform hover:scale-105">
                Commercial
            </button>
            <button id="residentialFilter" class="filter-btn bg-blue-400 text-white px-6 py-3 rounded-lg hover:bg-blue-500 transition transform hover:scale-105">
                Residential
            </button>
        </div>

        <!-- Projects Section -->
        <div id="projectsSection">
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                <% if (projects && Array.isArray(projects) && projects.length > 0) { %>
                    <% projects.forEach((project, index) => { %>
                        <a href="/listings/<%= project._id %>" class="project-card block bg-white rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition transform hover:scale-105 animate-fade-in" style="animation-delay: <%= index * 0.1 %>s;" data-type="<%= project.type %>">
                            <div class="h-80 relative">
                                <% if (project.images && Array.isArray(project.images) && project.images.length > 0) { %>
                                    <img src="<%= project.images[0].url %>" alt="<%= project.Name || 'Project' %>" class="w-full h-full object-cover transition-transform duration-300 hover:scale-110">
                                <% } else { %>
                                    <div class="w-full h-full bg-gray-200 flex items-center justify-center">
                                        <span class="text-gray-500 text-lg font-medium">No Image Available</span>
                                    </div>
                                <% } %>
                            </div>
                            <div class="p-6">
                                <h3 class="text-xl font-semibold text-gray-900 truncate"><%= project.Name || 'Unnamed Project' %></h3>
                            </div>
                        </a>
                    <% }) %>
                <% } else { %>
                    <div class="col-span-full bg-white rounded-lg shadow-lg p-8 text-center animate-fade-in">
                        <p class="text-xl text-gray-600">No projects found.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</main>

<style>
    @keyframes fade-in {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    .animate-fade-in {
        animation: fade-in 0.5s ease-out forwards;
    }
    .filter-btn.active {
        background-color: #1e40af; /* Darker blue for active state */
        transform: scale(1.05);
    }
    .filter-btn:not(.active) {
        background-color: #60a5fa; /* Lighter blue for inactive state */
    }
    .filter-btn:not(.active):hover {
        background-color: #3b82f6; /* Slightly darker blue for inactive hover */
    }
</style>

<script>
    // Get DOM elements
    const commercialFilter = document.getElementById('commercialFilter');
    const residentialFilter = document.getElementById('residentialFilter');
    const projectCards = document.querySelectorAll('.project-card');

    // Function to set active button
    function setActiveButton(button) {
        [commercialFilter, residentialFilter].forEach(btn => {
            btn.classList.remove('active');
        });
        if (button) {
            button.classList.add('active');
        }
    }

    // Function to filter projects
    function filterProjects(type) {
        projectCards.forEach(card => {
            const cardType = card.dataset.type;
            if (type === 'all' || cardType === type) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });

        // Show "No projects found" if no cards are visible
        const visibleCards = Array.from(projectCards).filter(card => card.style.display === 'block');
        const noProjectsDiv = document.querySelector('.col-span-full');
        if (visibleCards.length === 0 && !noProjectsDiv) {
            const projectsGrid = document.querySelector('#projectsSection .grid');
            projectsGrid.innerHTML = `
                <div class="col-span-full bg-white rounded-lg shadow-lg p-8 text-center animate-fade-in">
                    <p class="text-xl text-gray-600">No projects found.</p>
                </div>
            `;
        } else if (visibleCards.length > 0 && noProjectsDiv) {
            noProjectsDiv.remove();
            projectCards.forEach(card => {
                if (type === 'all' || card.dataset.type === type) {
                    card.style.display = 'block';
                }
            });
        }
    }

    // Handle filter button clicks
    commercialFilter.addEventListener('click', () => {
        const url = new URL(window.location);
        if (commercialFilter.classList.contains('active')) {
            // Deactivate and show all projects
            url.searchParams.delete('type');
            window.history.pushState({}, '', url);
            setActiveButton(null);
            filterProjects('all');
        } else {
            // Activate and show Commercial projects
            url.searchParams.set('type', 'Commercial');
            window.history.pushState({}, '', url);
            setActiveButton(commercialFilter);
            filterProjects('Commercial');
        }
    });

    residentialFilter.addEventListener('click', () => {
        const url = new URL(window.location);
        if (residentialFilter.classList.contains('active')) {
            // Deactivate and show all projects
            url.searchParams.delete('type');
            window.history.pushState({}, '', url);
            setActiveButton(null);
            filterProjects('all');
        } else {
            // Activate and show Residential projects
            url.searchParams.set('type', 'Residential');
            window.history.pushState({}, '', url);
            setActiveButton(residentialFilter);
            filterProjects('Residential');
        }
    });

    // Initialize based on URL
    const urlParams = new URLSearchParams(window.location.search);
    const type = urlParams.get('type');
    if (type === 'Commercial') {
        setActiveButton(commercialFilter);
        filterProjects('Commercial');
    } else if (type === 'Residential') {
        setActiveButton(residentialFilter);
        filterProjects('Residential');
    } else {
        setActiveButton(null);
        filterProjects('all');
    }
</script>